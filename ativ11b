void setup() {
 
  asm(
".include "m328pdef.inc" \n"
".org 0x0000 rjmp setup \n"
".org 0x0020 rjmp timer ; localizacao overflow "
);
}

void loop(){

asm(

"setup: \n"
" .org 0x0033 \n"

      "  ldi r20, 0b11111111 ; 8 bits de saida \n"
	" out 0x2A, r20  ; DDRD - 0x2A \n"
       " ldi r20, 0b00000000 ; 2 bits sinal de entrada \n"
	"out 0x27, r20 ; DDRC - 0x27 \n"
	"ldi r20, 0b00100000 ; 8 bits de saida \n"
	"out 0x24, r20 ; ; DDRB - 0x24 \n"
  
"  clr r24    ;controle \n"
"  ldi r25, 255  ;controle \n"
"  clr r27 \n"

" cli ;configuração do timer \n"

" ldi r20, 0b00000010 \n"
"sts 0x45, r20 ; Pre-escala de 255 ; TCCR0B - 0x45 \n"
"ldi r20, 0b00000001 \n"
" sts 0x6E, r20 ; Habilita interrupcao de comparacao ; TIMSK0 - 0x6E \n"

" sei \n"

" loop: \n"

" cp r21,r27 \n"
 " brne sele \n"

" rjmp loop \n"

" sele: \n"

" mov r27,r21 \n"

" cpi r21,0 \n"
" breq timer_255 \n"

" cpi r23,0 \n"
" breq quadrada \n"

" cpi r23,1 \n"
" breq serra \n"

" cpi r23,2 \n"
" breq triangular \n"

" rjmp loop \n"

" quadrada: \n"
" sbrc r21,7 \n"
" out 0x2B, r25 ;escreve na porta de saida. ; PORTD - 0x2B \n"
" sbrs r21,7 \n"
" out 0x2B, r24 ;escreve na porta de saida ; PORTD - 0x2B \n"

"sbrc r21,7 \n"
"sbi 0x25, 5  ; PORTB - 0x25 \n"
"sbrs r21,7 \n"
"cbi 0x25, 5 ; PORTB - 0x25 \n"
"rjmp loop \n"

"serra: \n"
"out 0x2B, r21 ;escreve na porta de saida ; PORTD - 0x2B \n"
"rjmp loop \n"

"triangular: \n"
"mov r26,r21 \n"
"cpi r21,127 \n"
"brsh tratamento \n"
"volta: \n"
"lsl r26 \n"
"out 0x2B, r26 ;escreve na porta de saida ; PORTD - 0x2B \n"
"rjmp loop \n"

"tratamento: ;parte da triangular \n"
"ldi r20,127 \n"
"sub r26,r20 \n"
"sub r20,r26 \n"
"mov r26,r20 \n"
"rjmp volta \n"

"timer_255:   ;funcao interrupcao \n"
"clr r27 \n"
"in r22, 0x26  ; r22 registrador que lida com o valor de entrada ; PINC - 0x26 \n"
"sbrc r22,0 \n"
"sbr r23,1 ;r23 guarda o valor  \n"
"sbrc r22,1 \n"
"sbr r23,2 ;r23 guarda o valor  \n"
"rjmp loop \n"

"timer:   ;funcao interrupcao \n"
"inc r21 ;r21 registrador que guarda o valor da saida \n"
"reti \n"

);
}
